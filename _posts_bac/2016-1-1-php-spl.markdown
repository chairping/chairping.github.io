---
layout:    post
title:     "PHP SPL"
subtitle:  "SPL学习笔记"
date:       201６-1-1 17:50
---

异步编程

什么是事件驱动？所谓事件驱动，简单的说就是，你告诉我你关注什么事情，等事情发生的时候我会主动通知你，然后你再作相应的处理。
这样可以就可以把你解放出来，你只关注于处理好相应事件即可。
采用事件驱动有什么优势呢？
相对于常见的多进程编程，能更好的利用CPU资源。多进程编程会使进程数量变多，进程上下文切换频繁会增加系统压力，浪费宝贵的CPU资源。
相对于多线程编程而言，可以降低编程复杂度。开发者不必再考虑线程间资源共享导致资源竞争等问题。


ReactPHP和Node.js一样都是采用了单进程和单线程的运行方式。
单进程，单线程方式，没有多线程的资源抢占和上下文切换，高效率的运行，维护着一个事件队列。
这种运行方式，通常情况下瓶颈一般在CPU而不是内存。由于单进程，单线程只能在一个CPU上运行，本身不能充分利用多个CPU资源。
为了解决这个问题，我们可以启动多个进程，监听不同的端口，前端使用nginx等做代理，把请求分发到不同的进程上。
对于多进程的管理上，现在已经有不少开源项目可以实现。如，php-pm（https://github.com/php-pm/php-pm）。


http://www.csdn.net/article/2015-10-12/2825887
，ReactPHP更适合IO密集型的应用。
### SplQueue

