---
layout:    post
title:     "php 正则表达式"
subtitle:  ""
date:       2015-12-15 16:26
category: php
---

零宽断言
-------
<br/>

#### (?=exp) 零宽度正预测先行断言

它断言自身出现的位置的`后面`能匹配表达式exp,比如`\b\w+(?=ing\b)`，匹配以`ing`结尾的单词的前面部分(除了ing以外的部分)，
如查找`I'm singing while you're dancing.`时，它会匹配`sing`和`danc`

###### 例如
```php
preg_match('/xx(?=([^\.]))/', 'xxsdfsd.', $b); 
var_dump($b);
```
output: array(2) { [0] => 'xx' [1] => 's'}
匹配非.前面符合xx的字符
即 `xx` 字符符合表达式  

#### (?<=exp)也叫零宽度正回顾后发断言

它断言自身出现的位置的`前面`能匹配表达式exp,比如`(?<=\bre)\w+\b`会匹配以`re`开头的单词的后半部分(除了re以外的部分)，
例如在查找`reading a book`时，它匹配`ading`。

```php
$a =  "
                车损信息\n
                维修零件名称：左后门\n
                维修金额：200.0\n
                维修零件名称：左后门\n
                维修金额：240.0\n
                维修零件名称：左后叶子板\n
                维修金额：200.0\n
                维修零件名称：左后叶子板\n
                维修金额：240.0\n
                维修零件名称：左侧门槛\n
                维修金额：100.0\n
                维修零件名称：左侧门槛\n
                维修金额：100.0\n
                维修零件名称：后杠\n
                维修金额：240.0\n
                维修零件名称：左后尾灯抛光\n
                维修金额：50.0\n
                ";

preg_match('/(?<=维修零件名称：).*\n/', $a, $b);
var_dump($b);
```
output: array (size=1)  0 => string '左后门
        ' (length=10)
匹配`维修零件名称：`后面以\n结尾的字符串 
